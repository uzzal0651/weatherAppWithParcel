{"mappings":"AACA,MAAMA,EAAc,ICDpB,MACEC,KAAM,GACNC,QAAS,GACTC,QAAS,mCACTC,mBACE,MAAMC,QAAYC,MAChB,qDAAqDC,KAAKN,QAAQM,KAAKL,8BAA8BK,KAAKJ,YAEtGK,KAAEA,EAAIC,KAAEA,EAAIC,QAAEA,SAAkBL,EAAIM,OAG1C,MAAO,C,KACLH,E,KACAC,E,QACAC,E,ICVK,IFFX,MACEE,gBAUE,MAAO,C,WATYC,SAASC,cAAc,Y,SACzBD,SAASC,cAAc,S,QACxBD,SAASC,cAAc,S,YACnBD,SAASC,cAAc,W,eACpBD,SAASC,cAAc,W,YAC1BD,SAASC,cAAc,e,YACvBD,SAASC,cAAc,e,QAC3BD,SAASC,cAAc,W,QACvBD,SAASC,cAAc,W,CAczCC,iBACE,MAAMC,WAAEA,EAAUC,SAAEA,GAAaV,KAAKK,gBAGtC,MAAO,CACLV,QAASc,EAAWE,MACpBjB,KAAMgB,EAASC,M,CAInBd,yBAKE,aADmBJ,EAAYmB,Y,CAIjCC,WAAWC,GAET,MAAMC,YACJA,EAAWC,eACXA,EAAcC,YACdA,EAAWC,YACXA,EAAWC,QACXA,EAAOC,QACPA,GACEpB,KAAKK,iBACHJ,KACJA,EACAC,MAAMmB,KAAEA,EAAIC,SAAEA,EAAQC,SAAEA,GAAUpB,QAClCA,GACEW,EACJC,EAAYS,YAAcvB,EAC1Be,EAAeQ,YAAcH,EAC7BJ,EAAYO,YAAcF,EAC1BJ,EAAYM,YAAcD,EAC1BH,EAAQI,YAAcrB,EAAQ,GAAGsB,YACjCN,EAAQO,aAAa,MAAO1B,KAAK2B,QAAQxB,EAAQ,GAAGyB,M,CAGtDC,OAEE,MAAMC,QAAEA,GAAY9B,KAAKK,gBACzByB,EAAQC,iBAAiB,UAAUlC,MAAOmC,IACxCA,EAAMC,iBAEN,MAAMtC,QAAEA,EAAOD,KAAEA,GAASM,KAAKQ,iBAC/Bf,EAAYE,QAAUA,EACtBF,EAAYC,KAAOA,EAEnB,MAAMoB,QAAad,KAAKkC,mBAExBlC,KAAKa,WAAWC,EAAK,G,IE1ExBe","sources":["ui.js","WeatherData.js","main.js"],"sourcesContent":["import WeatherData from \"./WeatherData.js\";\nconst weatherData = new WeatherData();\nclass UI{\n  loadSelectors() {\n    const countryEle = document.querySelector(\"#country\");\n    const cityElem = document.querySelector(\"#city\");\n    const formElm = document.querySelector(\"#form\");\n    const cityInfoElm = document.querySelector(\"#w-city\");\n    const temperatureElm = document.querySelector(\"#w-temp\");\n    const pressureElm = document.querySelector(\"#w-pressure\");\n    const humidityElm = document.querySelector(\"#w-humidity\");\n    const feelElm = document.querySelector(\"#w-feel\");\n    const iconElm = document.querySelector(\"#w-icon\");\n    return {\n      countryEle,\n      cityElem,\n      formElm,\n      cityInfoElm,\n      temperatureElm,\n      pressureElm,\n      humidityElm,\n      feelElm,\n      iconElm,\n    };\n  }\n\n  getInputValues() {\n    const { countryEle, cityElem } = this.loadSelectors();\n    //console.log(countryEle.value, cityElem.value);\n\n    return {\n      country: countryEle.value,\n      city: cityElem.value,\n    };\n  }\n\n  async handleRemoteData() {\n    //const weatherData = new WeatherData();\n    //weatherData.getWeather();\n    //console.log(weatherData)\n    const data = await weatherData.getWeather();\n    return data;\n  }\n\n  populateUI(data) {\n    //const weatherData = new WeatherData();\n    const {\n      cityInfoElm,\n      temperatureElm,\n      pressureElm,\n      humidityElm,\n      iconElm,\n      feelElm,\n    } = this.loadSelectors();\n    const {\n      name,\n      main: { temp, pressure, humidity },\n      weather,\n    } = data;\n    cityInfoElm.textContent = name;\n    temperatureElm.textContent = temp;\n    pressureElm.textContent = pressure;\n    humidityElm.textContent = humidity;\n    feelElm.textContent = weather[0].description;\n    iconElm.setAttribute(\"src\", this.getIcon(weather[0].icon));\n  }\n\n  init() {\n    //const weatherData = new WeatherData();\n    const { formElm } = this.loadSelectors();\n    formElm.addEventListener(\"submit\", async (event) => {\n      event.preventDefault();\n\n      const { country, city } = this.getInputValues();\n      weatherData.country = country;\n      weatherData.city = city;\n\n      const data = await this.handleRemoteData();\n      //console.log(data);\n      this.populateUI(data);\n    });\n  }\n}\n\nexport default UI;\n\n\n","class WeatherData{\n  city= \"\";\n  country= \"\";\n  API_KEY= \"14dc62d694161dc87df0b7de7070e6b9\";\n  async getWeather() {\n    const res = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${this.city},${this.country}&units=metric&appid=${this.API_KEY}`\n    );\n    const { name, main, weather } = await res.json();\n    //console.log(this.city);\n    //console.log(name, main, weather);\n    return {\n      name,\n      main,\n      weather,\n    };\n  }\n}\n\nexport default WeatherData;\n","//import UI from \"./ui.js\";\n\nimport UI from \"./ui.js\";\n\nconst ui = new UI();\nui.init();\n\n\n"],"names":["$d88b1b225c388b44$var$weatherData","city","country","API_KEY","async","res","fetch","this","name","main","weather","json","loadSelectors","document","querySelector","getInputValues","countryEle","cityElem","value","getWeather","populateUI","data","cityInfoElm","temperatureElm","pressureElm","humidityElm","iconElm","feelElm","temp","pressure","humidity","textContent","description","setAttribute","getIcon","icon","init","formElm","addEventListener","event","preventDefault","handleRemoteData"],"version":3,"file":"index.f76f1aee.js.map"}